{"paragraphs":[{"text":"%spark\n\nimport org.apache.spark.SparkContext\nimport org.apache.spark.ml.classification.{RandomForestClassificationModel, RandomForestClassifier}\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.linalg.Vectors\nimport org.apache.spark.ml.linalg.DenseVector\nimport org.apache.spark.sql.functions.udf\nimport org.apache.spark.sql.functions.rand\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.ml.classification.MultilayerPerceptronClassifier\nimport scala.collection.JavaConversions._\nimport org.apache.spark.storage.StorageLevel\nimport org.apache.spark.ml.feature.Word2Vec\nimport org.apache.spark.ml.feature.Word2VecModel\nimport org.apache.spark.ml.linalg.Vector\nimport org.apache.spark.sql.Row\nimport org.apache.spark.storage.StorageLevel\n\n\n\nprintln(\"Scala version: \" + util.Properties.versionString);\nprintln(\"Spark version: \" + sc.version);\nprintln(\"Java version: \" + System.getProperty(\"java.version\"));","user":"anonymous","dateUpdated":"2020-05-10T10:44:13+0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Scala version: version 2.11.12\nSpark version: 2.4.4\nJava version: 1.8.0_181\nimport org.apache.spark.SparkContext\nimport org.apache.spark.ml.classification.{RandomForestClassificationModel, RandomForestClassifier}\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.linalg.Vectors\nimport org.apache.spark.ml.linalg.DenseVector\nimport org.apache.spark.sql.functions.udf\nimport org.apache.spark.sql.functions.rand\nimport org.apache.spark.sql.DataFrame\nimport org.apache.spark.ml.classification.MultilayerPerceptronClassifier\nimport scala.collection.JavaConversions._\nimport org.apache.spark.storage.StorageLevel\nimport org.apache.spark.ml.feature.Word2Vec\nimport org.apache.spark.ml.feature.Word2VecModel\nimport org.apache.spark.ml.linalg.Vector\nimport org.apache.spark.sql.Row\nimport org...."}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588981364064_-92584833","id":"20190505-221345_607136256","dateCreated":"2020-05-09T07:42:44+0800","dateStarted":"2020-05-10T10:44:13+0800","dateFinished":"2020-05-10T10:44:13+0800","status":"FINISHED","focus":true,"$$hashKey":"object:7046"},{"text":"%md\n\n# What follows is a simple (far too simple to be useful) example of Word2Vec","user":"anonymous","dateUpdated":"2020-05-09T07:42:44+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>What follows is a simple (far too simple to be useful) example of Word2Vec</h1>\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588981364069_-122773171","id":"20191202-211146_126646622","dateCreated":"2020-05-09T07:42:44+0800","status":"READY","$$hashKey":"object:7047"},{"text":"%spark\n\n\n// Input data: Each row is a bag of words from a sentence or document.\nval documentDF = spark.createDataFrame(Seq(\n  \"Hi I heard about Spark\".split(\" \"),\n  \"I wish Java could use case classes\".split(\" \"),\n  \"Logistic regression models are neat\".split(\" \")\n).map(Tuple1.apply)).toDF(\"text\")\n\n// Learn a mapping from words to Vectors.\nval word2Vec = new Word2Vec()\n  .setInputCol(\"text\")\n  .setOutputCol(\"result\")\n  .setVectorSize(3)\n  .setMinCount(0)\nval model = word2Vec.fit(documentDF)\n\nval result = model.transform(documentDF)\nresult.collect().foreach { case Row(text: Seq[_], features: Vector) =>\n  println(s\"Text: [${text.mkString(\", \")}] => \\nVector: $features\\n\") }","user":"anonymous","dateUpdated":"2020-05-10T10:34:22+0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Text: [Hi, I, heard, about, Spark] => \nVector: [-0.028139343485236168,0.04554025698453188,-0.013317196490243079]\n\nText: [I, wish, Java, could, use, case, classes] => \nVector: [0.06872416580361979,-0.02604914902310286,0.02165239889706884]\n\nText: [Logistic, regression, models, are, neat] => \nVector: [0.023467857390642166,0.027799883112311366,0.0331136979162693]\n\n\u001b[1m\u001b[34mdocumentDF\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [text: array<string>]\n\u001b[1m\u001b[34mword2Vec\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.Word2Vec\u001b[0m = w2v_885c57d3728d\n\u001b[1m\u001b[34mmodel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.Word2VecModel\u001b[0m = w2v_885c57d3728d\n\u001b[1m\u001b[34mresult\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [text: array<string>, result: vector]\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://192.168.0.106:4040/jobs/job?id=189","$$hashKey":"object:7503"},{"jobUrl":"http://192.168.0.106:4040/jobs/job?id=190","$$hashKey":"object:7504"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588981364069_-2063904867","id":"20190505-221400_1400859144","dateCreated":"2020-05-09T07:42:44+0800","dateStarted":"2020-05-10T10:34:22+0800","dateFinished":"2020-05-10T10:34:23+0800","status":"FINISHED","$$hashKey":"object:7048"},{"text":"%md\n\n# These functions will be helpful later. ","user":"anonymous","dateUpdated":"2020-05-09T07:42:44+0800","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>These functions will be helpful later.</h1>\n</div>"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588981364069_56205303","id":"20191202-211504_2098991677","dateCreated":"2020-05-09T07:42:44+0800","status":"READY","$$hashKey":"object:7049"},{"text":"%spark\ndef splitFunc (textLine: String) : Array[String] = {return textLine.toLowerCase.split(\" \");}\nval splitUdf = udf(splitFunc _)\n\ndef ExtractVector(word: String, model: Word2VecModel) : Array[Double] = {return model.getVectors.filter($\"word\" === word).select(\"vector\").collect().apply(0).apply(0).asInstanceOf[DenseVector].toArray;}; \n\ndef VectorPlus(a : Array[Double], b: Array[Double]) : Array[Double] = { return a.zip(b).map(x => x._1 + x._2); };\ndef VectorMinus(a : Array[Double], b: Array[Double]) : Array[Double] = { return a.zip(b).map(x => x._1 - x._2); };","user":"anonymous","dateUpdated":"2020-05-10T10:44:17+0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[1m\u001b[34msplitFunc\u001b[0m: \u001b[1m\u001b[32m(textLine: String)Array[String]\u001b[0m\n\u001b[1m\u001b[34msplitUdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.expressions.UserDefinedFunction\u001b[0m = UserDefinedFunction(<function1>,ArrayType(StringType,true),Some(List(StringType)))\n\u001b[1m\u001b[34mExtractVector\u001b[0m: \u001b[1m\u001b[32m(word: String, model: org.apache.spark.ml.feature.Word2VecModel)Array[Double]\u001b[0m\n\u001b[1m\u001b[34mVectorPlus\u001b[0m: \u001b[1m\u001b[32m(a: Array[Double], b: Array[Double])Array[Double]\u001b[0m\n\u001b[1m\u001b[34mVectorMinus\u001b[0m: \u001b[1m\u001b[32m(a: Array[Double], b: Array[Double])Array[Double]\u001b[0m\n"}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588981364070_478345943","id":"20191202-050026_1853454161","dateCreated":"2020-05-09T07:42:44+0800","dateStarted":"2020-05-10T10:44:17+0800","dateFinished":"2020-05-10T10:44:18+0800","status":"FINISHED","$$hashKey":"object:7050"},{"text":"%spark\n\n//var raw_text_sample : DataFrame =  spark.read.parquet(\"gs://nyu-spring2019/word2vec/gutenberg_sample\").withColumn(\"text2\", splitUdf($\"clean_text\"));\n//var raw_text_sample : DataFrame =  spark.read.parquet(\"gs://dataproc-temp-us-central1-727122633199-d6ec8qlc/gutenberg_sample\").withColumn(\"text2\", splitUdf($\"clean_text\")).orderBy(rand()).limit(1000 * 1000);\nvar raw_text_sample : DataFrame =  spark.read.parquet(\"/Users/zihaozhang/zeppelin/gutenberg_sample\").withColumn(\"text2\", splitUdf($\"clean_text\")).orderBy(rand(12345)).limit(1000 * 1000);\nraw_text_sample.registerTempTable(\"raw_text_sample\")\n\n\nraw_text_sample.count();\n\n//var df_shuffled_orig = df_tmp2.sample(true, 0.005);\n//df_shuffled_orig.write.mode(\"append\").format(\"parquet\").save(\"<filename>\");\n// var df_shuffled = spark.read.parquet(\"<path>/gutenberg_sample\")\n// df_shuffled.count()","user":"anonymous","dateUpdated":"2020-05-10T10:44:20+0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\u001b[33mwarning: \u001b[0mthere was one deprecation warning; re-run with -deprecation for details\n\u001b[1m\u001b[34mraw_text_sample\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [ID: bigint, LINE: bigint ... 3 more fields]\n\u001b[1m\u001b[34mres177\u001b[0m: \u001b[1m\u001b[32mLong\u001b[0m = 756976\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://192.168.0.106:4040/jobs/job?id=207","$$hashKey":"object:7664"},{"jobUrl":"http://192.168.0.106:4040/jobs/job?id=208","$$hashKey":"object:7665"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588981364070_575700823","id":"20191202-045903_315700090","dateCreated":"2020-05-09T07:42:44+0800","dateStarted":"2020-05-10T10:44:20+0800","dateFinished":"2020-05-10T10:44:25+0800","status":"FINISHED","$$hashKey":"object:7051"},{"text":"%sql\n\nSELECT *\nFROM raw_text_sample\nLIMIT 10","user":"anonymous","dateUpdated":"2020-05-10T10:44:26+0800","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"ID":"string","LINE":"string","TEXT":"string","CLEAN_TEXT":"string","text2":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"ID\tLINE\tTEXT\tCLEAN_TEXT\ttext2\n22040\t1610\t It was invented by the father of modern bee-culture\tIt was invented by the father of modern bee culture\tWrappedArray(it, was, invented, by, the, father, of, modern, bee, culture)\n30290\t1800\t E\tE\tWrappedArray(e)\n48791\t602\t  It's constitutional, and it still protects children\tIt s constitutional and it still protects children\tWrappedArray(it, s, constitutional, and, it, still, protects, children)\n27698\t9147\t_, Memor\t_ Memor\tWrappedArray(_, memor)\n40137\t4240\t Then, too, I wondered how the next day's adventure would turn out, and whether Goergei had been forced to stand at bay again\tThen too I wondered how the next day s adventure would turn out and whether Goergei had been forced to stand at bay again\tWrappedArray(then, too, i, wondered, how, the, next, day, s, adventure, would, turn, out, and, whether, goergei, had, been, forced, to, stand, at, bay, again)\n41826\t3369\t30\t30\tWrappedArray(30)\n5059\t3618\t  You're a good fellow\tYou re a good fellow\tWrappedArray(you, re, a, good, fellow)\n10382\t846\tF\tF\tWrappedArray(f)\n22581\t241\t 168, refers to this point as follows: \"It frequently happens that the tones of the lower range, or the so-called chest-tones, are forced up too high into the middle range\t168 refers to this point as follows It frequently happens that the tones of the lower range or the so called chest tones are forced up too high into the middle range\tWrappedArray(168, refers, to, this, point, as, follows, it, frequently, happens, that, the, tones, of, the, lower, range, or, the, so, called, chest, tones, are, forced, up, too, high, into, the, middle, range)\n32607\t7125\t                ||  9   oz\t9 oz\tWrappedArray(9, oz)\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://192.168.0.106:4040/jobs/job?id=209","$$hashKey":"object:7767"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588981364070_-1516111756","id":"20191202-050107_1446639852","dateCreated":"2020-05-09T07:42:44+0800","dateStarted":"2020-05-10T10:44:26+0800","dateFinished":"2020-05-10T10:44:36+0800","status":"FINISHED","$$hashKey":"object:7052"},{"text":"%spark\n\nvar start = System.currentTimeMillis();\nval word2Vec = new Word2Vec()\n  .setInputCol(\"text2\")\n  .setOutputCol(\"result\")\n  .setVectorSize(10)\n  .setMinCount(0)\nval model = word2Vec.fit(raw_text_sample.limit(5 * 1000))\nvar end = System.currentTimeMillis();\n\nprintln(\"Fitting time: \" + (end - start))\n\nz.show(model.findSynonyms(\"man\", 5));\n\n//model.save(\"<filename>\")","user":"anonymous","dateUpdated":"2020-05-10T10:37:16+0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"word":"string","similarity":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}},"1":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"word":"string","similarity":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Fitting time: 6260\n\n"},{"type":"TABLE","data":"word\tsimilarity\nword\t0.9571157097816467\nfinished\t0.955591082572937\nwoman\t0.9552931189537048\nmeaning\t0.949346661567688\nsmile\t0.9479780793190002\n"},{"type":"TEXT","data":"\u001b[1m\u001b[34mstart\u001b[0m: \u001b[1m\u001b[32mLong\u001b[0m = 1589078238009\n\u001b[1m\u001b[34mword2Vec\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.Word2Vec\u001b[0m = w2v_95d6c747c199\n\u001b[1m\u001b[34mmodel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.Word2VecModel\u001b[0m = w2v_95d6c747c199\n\u001b[1m\u001b[34mend\u001b[0m: \u001b[1m\u001b[32mLong\u001b[0m = 1589078244269\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://192.168.0.106:4040/jobs/job?id=201","$$hashKey":"object:7885"},{"jobUrl":"http://192.168.0.106:4040/jobs/job?id=202","$$hashKey":"object:7886"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588981364070_-1422652787","id":"20190505-235056_159035196","dateCreated":"2020-05-09T07:42:44+0800","dateStarted":"2020-05-10T10:37:16+0800","dateFinished":"2020-05-10T10:37:24+0800","status":"FINISHED","$$hashKey":"object:7053"},{"text":"%spark\nvar start = System.currentTimeMillis();\nval word2Vec3 = new Word2Vec()\n  .setInputCol(\"text2\")\n  .setOutputCol(\"result\")\n  .setVectorSize(64)\n  .setMinCount(3)\n  .setSeed(1234)\n  //.setSeed(3241)\nval model3 = word2Vec3.fit(raw_text_sample.limit(400 * 1000))\nvar end = System.currentTimeMillis();\n\nprintln(\"Fitting time: \" + (end - start))","user":"anonymous","dateUpdated":"2020-05-10T10:44:43+0800","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Fitting time: 115357\n\u001b[1m\u001b[34mstart\u001b[0m: \u001b[1m\u001b[32mLong\u001b[0m = 1589078683866\n\u001b[1m\u001b[34mword2Vec3\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.Word2Vec\u001b[0m = w2v_0e5504dc5ae8\n\u001b[1m\u001b[34mmodel3\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.Word2VecModel\u001b[0m = w2v_0e5504dc5ae8\n\u001b[1m\u001b[34mend\u001b[0m: \u001b[1m\u001b[32mLong\u001b[0m = 1589078799223\n"}]},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://192.168.0.106:4040/jobs/job?id=210","$$hashKey":"object:7948"},{"jobUrl":"http://192.168.0.106:4040/jobs/job?id=211","$$hashKey":"object:7949"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588981364072_481709737","id":"20191202-214231_539592972","dateCreated":"2020-05-09T07:42:44+0800","dateStarted":"2020-05-10T10:44:43+0800","dateFinished":"2020-05-10T10:46:39+0800","status":"FINISHED","$$hashKey":"object:7054"},{"text":"%spark\nvar output_vector = VectorPlus(VectorMinus(ExtractVector(\"king\", model3), ExtractVector(\"man\", model3)),  ExtractVector(\"woman\", model3));\nz.show(model3.findSynonyms(Vectors.dense(output_vector), 5))","user":"anonymous","dateUpdated":"2020-05-10T10:44:46+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"word":"string","similarity":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"word\tsimilarity\nqueen\t0.8723110556602478\nking\t0.8463303446769714\nprincess\t0.8066873550415039\nduke\t0.7733711004257202\ncountess\t0.7658977508544922\n"},{"type":"TEXT","data":"\u001b[1m\u001b[34moutput_vector\u001b[0m: \u001b[1m\u001b[32mArray[Double]\u001b[0m = Array(-0.11245819181203842, 0.11137385666370392, -0.015089098364114761, -0.36240581423044205, 0.04438947141170502, -0.2809385098516941, 0.3319847732782364, -0.01551187876611948, 0.025808959850110114, 0.32835082709789276, 0.23147538304328918, -0.03708214312791824, -0.1505388377700001, -0.19703141786158085, -0.09495295584201813, 0.2627604901790619, -0.183094322681427, 0.13666848093271255, 0.2980544865131378, -0.22391510009765625, 0.004392975941300392, 0.05436626821756363, -0.24372436478734016, -0.08274119719862938, -0.2102229930460453, -0.041750647127628326, -0.4131768364459276, -0.07963008433580399, -0.08734823018312454, -0.10833121836185455, 0.01120452955365181, -0.4092034362256527, 0.11796763073652983, 0.2756361663341522, -0.3933..."}]},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588982100684_1313412397","id":"paragraph_1588982100684_1313412397","dateCreated":"2020-05-09T07:55:00+0800","dateStarted":"2020-05-10T10:44:46+0800","dateFinished":"2020-05-10T10:46:41+0800","status":"FINISHED","$$hashKey":"object:7055"},{"text":"%spark\n","user":"anonymous","dateUpdated":"2020-05-09T10:03:09+0800","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1588989789296_642277387","id":"paragraph_1588989789296_642277387","dateCreated":"2020-05-09T10:03:09+0800","status":"READY","$$hashKey":"object:7056"}],"name":"word2vec_king_w14g4","id":"2F7G64X5B","defaultInterpreterGroup":"spark","version":"0.9.0-SNAPSHOT","permissions":{},"noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{},"path":"/week13/word2vec_king_w14g4"}